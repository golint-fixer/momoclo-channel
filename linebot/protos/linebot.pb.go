// Code generated by protoc-gen-go.
// source: linebot/protos/linebot.proto
// DO NOT EDIT!

/*
Package linebot is a generated protocol buffer package.

It is generated from these files:
	linebot/protos/linebot.proto

It has these top-level messages:
	NotifyChannelRequest
	NotifyChannelResponse
	NotifyAppendUserRequest
	NotifyAppendUserResponse
	NotifyDeleteUserRequest
	NotifyDeleteUserResponse
*/
package linebot

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NotifyChannelRequest struct {
	To    []string                   `protobuf:"bytes,1,rep,name=to" json:"to,omitempty"`
	Title string                     `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Item  *NotifyChannelRequest_Item `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *NotifyChannelRequest) Reset()                    { *m = NotifyChannelRequest{} }
func (m *NotifyChannelRequest) String() string            { return proto.CompactTextString(m) }
func (*NotifyChannelRequest) ProtoMessage()               {}
func (*NotifyChannelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NotifyChannelRequest) GetItem() *NotifyChannelRequest_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

type NotifyChannelRequest_Item struct {
	Title  string                             `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Url    string                             `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Images []*NotifyChannelRequest_Item_Image `protobuf:"bytes,3,rep,name=images" json:"images,omitempty"`
	Videos []*NotifyChannelRequest_Item_Video `protobuf:"bytes,4,rep,name=videos" json:"videos,omitempty"`
}

func (m *NotifyChannelRequest_Item) Reset()                    { *m = NotifyChannelRequest_Item{} }
func (m *NotifyChannelRequest_Item) String() string            { return proto.CompactTextString(m) }
func (*NotifyChannelRequest_Item) ProtoMessage()               {}
func (*NotifyChannelRequest_Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *NotifyChannelRequest_Item) GetImages() []*NotifyChannelRequest_Item_Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *NotifyChannelRequest_Item) GetVideos() []*NotifyChannelRequest_Item_Video {
	if m != nil {
		return m.Videos
	}
	return nil
}

type NotifyChannelRequest_Item_Image struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *NotifyChannelRequest_Item_Image) Reset()         { *m = NotifyChannelRequest_Item_Image{} }
func (m *NotifyChannelRequest_Item_Image) String() string { return proto.CompactTextString(m) }
func (*NotifyChannelRequest_Item_Image) ProtoMessage()    {}
func (*NotifyChannelRequest_Item_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0}
}

type NotifyChannelRequest_Item_Video struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *NotifyChannelRequest_Item_Video) Reset()         { *m = NotifyChannelRequest_Item_Video{} }
func (m *NotifyChannelRequest_Item_Video) String() string { return proto.CompactTextString(m) }
func (*NotifyChannelRequest_Item_Video) ProtoMessage()    {}
func (*NotifyChannelRequest_Item_Video) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 1}
}

type NotifyChannelResponse struct {
}

func (m *NotifyChannelResponse) Reset()                    { *m = NotifyChannelResponse{} }
func (m *NotifyChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*NotifyChannelResponse) ProtoMessage()               {}
func (*NotifyChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type NotifyAppendUserRequest struct {
	To string `protobuf:"bytes,1,opt,name=to" json:"to,omitempty"`
}

func (m *NotifyAppendUserRequest) Reset()                    { *m = NotifyAppendUserRequest{} }
func (m *NotifyAppendUserRequest) String() string            { return proto.CompactTextString(m) }
func (*NotifyAppendUserRequest) ProtoMessage()               {}
func (*NotifyAppendUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type NotifyAppendUserResponse struct {
}

func (m *NotifyAppendUserResponse) Reset()                    { *m = NotifyAppendUserResponse{} }
func (m *NotifyAppendUserResponse) String() string            { return proto.CompactTextString(m) }
func (*NotifyAppendUserResponse) ProtoMessage()               {}
func (*NotifyAppendUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type NotifyDeleteUserRequest struct {
	To string `protobuf:"bytes,1,opt,name=to" json:"to,omitempty"`
}

func (m *NotifyDeleteUserRequest) Reset()                    { *m = NotifyDeleteUserRequest{} }
func (m *NotifyDeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*NotifyDeleteUserRequest) ProtoMessage()               {}
func (*NotifyDeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type NotifyDeleteUserResponse struct {
}

func (m *NotifyDeleteUserResponse) Reset()                    { *m = NotifyDeleteUserResponse{} }
func (m *NotifyDeleteUserResponse) String() string            { return proto.CompactTextString(m) }
func (*NotifyDeleteUserResponse) ProtoMessage()               {}
func (*NotifyDeleteUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*NotifyChannelRequest)(nil), "linebot.NotifyChannelRequest")
	proto.RegisterType((*NotifyChannelRequest_Item)(nil), "linebot.NotifyChannelRequest.Item")
	proto.RegisterType((*NotifyChannelRequest_Item_Image)(nil), "linebot.NotifyChannelRequest.Item.Image")
	proto.RegisterType((*NotifyChannelRequest_Item_Video)(nil), "linebot.NotifyChannelRequest.Item.Video")
	proto.RegisterType((*NotifyChannelResponse)(nil), "linebot.NotifyChannelResponse")
	proto.RegisterType((*NotifyAppendUserRequest)(nil), "linebot.NotifyAppendUserRequest")
	proto.RegisterType((*NotifyAppendUserResponse)(nil), "linebot.NotifyAppendUserResponse")
	proto.RegisterType((*NotifyDeleteUserRequest)(nil), "linebot.NotifyDeleteUserRequest")
	proto.RegisterType((*NotifyDeleteUserResponse)(nil), "linebot.NotifyDeleteUserResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for LineBot service

type LineBotClient interface {
	NotifyChannel(ctx context.Context, in *NotifyChannelRequest, opts ...grpc.CallOption) (*NotifyChannelResponse, error)
	NotifyAppendUser(ctx context.Context, in *NotifyAppendUserRequest, opts ...grpc.CallOption) (*NotifyAppendUserResponse, error)
	NotifyDeleteUser(ctx context.Context, in *NotifyDeleteUserRequest, opts ...grpc.CallOption) (*NotifyDeleteUserResponse, error)
}

type lineBotClient struct {
	cc *grpc.ClientConn
}

func NewLineBotClient(cc *grpc.ClientConn) LineBotClient {
	return &lineBotClient{cc}
}

func (c *lineBotClient) NotifyChannel(ctx context.Context, in *NotifyChannelRequest, opts ...grpc.CallOption) (*NotifyChannelResponse, error) {
	out := new(NotifyChannelResponse)
	err := grpc.Invoke(ctx, "/linebot.LineBot/NotifyChannel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineBotClient) NotifyAppendUser(ctx context.Context, in *NotifyAppendUserRequest, opts ...grpc.CallOption) (*NotifyAppendUserResponse, error) {
	out := new(NotifyAppendUserResponse)
	err := grpc.Invoke(ctx, "/linebot.LineBot/NotifyAppendUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineBotClient) NotifyDeleteUser(ctx context.Context, in *NotifyDeleteUserRequest, opts ...grpc.CallOption) (*NotifyDeleteUserResponse, error) {
	out := new(NotifyDeleteUserResponse)
	err := grpc.Invoke(ctx, "/linebot.LineBot/NotifyDeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LineBot service

type LineBotServer interface {
	NotifyChannel(context.Context, *NotifyChannelRequest) (*NotifyChannelResponse, error)
	NotifyAppendUser(context.Context, *NotifyAppendUserRequest) (*NotifyAppendUserResponse, error)
	NotifyDeleteUser(context.Context, *NotifyDeleteUserRequest) (*NotifyDeleteUserResponse, error)
}

func RegisterLineBotServer(s *grpc.Server, srv LineBotServer) {
	s.RegisterService(&_LineBot_serviceDesc, srv)
}

func _LineBot_NotifyChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineBotServer).NotifyChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linebot.LineBot/NotifyChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineBotServer).NotifyChannel(ctx, req.(*NotifyChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineBot_NotifyAppendUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyAppendUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineBotServer).NotifyAppendUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linebot.LineBot/NotifyAppendUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineBotServer).NotifyAppendUser(ctx, req.(*NotifyAppendUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineBot_NotifyDeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyDeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineBotServer).NotifyDeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linebot.LineBot/NotifyDeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineBotServer).NotifyDeleteUser(ctx, req.(*NotifyDeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LineBot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "linebot.LineBot",
	HandlerType: (*LineBotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifyChannel",
			Handler:    _LineBot_NotifyChannel_Handler,
		},
		{
			MethodName: "NotifyAppendUser",
			Handler:    _LineBot_NotifyAppendUser_Handler,
		},
		{
			MethodName: "NotifyDeleteUser",
			Handler:    _LineBot_NotifyDeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("linebot/protos/linebot.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0x5d, 0x4b, 0xfb, 0x30,
	0x14, 0xc6, 0x97, 0x76, 0x2f, 0xfc, 0xcf, 0x1f, 0x65, 0x84, 0xc9, 0x6a, 0x51, 0x99, 0xb9, 0x9a,
	0x37, 0x1d, 0x4c, 0xf0, 0xda, 0xb7, 0x9b, 0x81, 0x88, 0x14, 0x14, 0xbc, 0xdc, 0xd8, 0x51, 0x03,
	0x5d, 0x53, 0x9b, 0x4c, 0xf0, 0x63, 0xf8, 0x09, 0xbd, 0xf5, 0x63, 0x98, 0xb4, 0x99, 0x9b, 0x8d,
	0xce, 0xdd, 0xe5, 0xe4, 0x3c, 0xe7, 0xf7, 0x9c, 0x3c, 0x10, 0xd8, 0x4b, 0x78, 0x8a, 0x13, 0xa1,
	0x06, 0x59, 0x2e, 0x94, 0x90, 0x03, 0x5b, 0x46, 0x45, 0x49, 0x5b, 0xb6, 0x64, 0xef, 0x1e, 0x74,
	0xae, 0x85, 0xe2, 0x0f, 0xaf, 0x17, 0x4f, 0xe3, 0x34, 0xc5, 0x24, 0xc6, 0xe7, 0x39, 0x4a, 0x45,
	0xb7, 0xc1, 0x53, 0x22, 0x20, 0x3d, 0xbf, 0xff, 0x2f, 0xd6, 0x27, 0xda, 0x81, 0x86, 0xe2, 0x2a,
	0xc1, 0xc0, 0xeb, 0x11, 0x7d, 0x55, 0x16, 0xf4, 0x04, 0xea, 0x5c, 0xe1, 0x2c, 0xf0, 0xf5, 0xe5,
	0xff, 0x21, 0x8b, 0x16, 0x2e, 0x3f, 0x21, 0xa3, 0x91, 0x56, 0xc6, 0x85, 0x3e, 0xfc, 0x20, 0x50,
	0x37, 0xe5, 0x12, 0x4b, 0x56, 0xb1, 0x6d, 0xf0, 0xe7, 0x79, 0x62, 0xad, 0xcc, 0x91, 0x9e, 0x42,
	0x93, 0xcf, 0xc6, 0x8f, 0x28, 0xb5, 0x95, 0xaf, 0xad, 0xfa, 0x7f, 0x5b, 0x45, 0x23, 0x33, 0x10,
	0xdb, 0x39, 0x43, 0x78, 0xe1, 0x53, 0x14, 0x32, 0xa8, 0x6f, 0x4c, 0xb8, 0x33, 0x03, 0xb1, 0x9d,
	0x0b, 0x77, 0xa1, 0x51, 0x20, 0x17, 0xeb, 0x91, 0xaf, 0xf5, 0x4c, 0xab, 0xd0, 0xba, 0x2d, 0xd6,
	0x85, 0x9d, 0x8a, 0x81, 0xcc, 0x44, 0x2a, 0x91, 0x1d, 0x41, 0xb7, 0x6c, 0x9c, 0x65, 0x19, 0xa6,
	0xd3, 0x5b, 0x89, 0x79, 0x35, 0x7c, 0x52, 0x86, 0xcf, 0x42, 0x08, 0x5c, 0x69, 0x15, 0x73, 0x89,
	0x09, 0x2a, 0xdc, 0x08, 0xb3, 0x2a, 0x2d, 0x31, 0xc3, 0x37, 0x0f, 0x5a, 0x57, 0x3a, 0x90, 0x73,
	0xa1, 0xe8, 0x0d, 0x6c, 0x7d, 0x5b, 0x99, 0xee, 0xaf, 0xcd, 0x2a, 0x3c, 0xf8, 0xad, 0x6d, 0x57,
	0xac, 0xd1, 0x7b, 0x68, 0x57, 0x1f, 0x40, 0x7b, 0x95, 0x29, 0x27, 0x86, 0xf0, 0x70, 0x8d, 0xc2,
	0x45, 0x2f, 0x1f, 0xe5, 0xa0, 0x9d, 0x68, 0x1c, 0xb4, 0x9b, 0x08, 0xab, 0x4d, 0x9a, 0xc5, 0x67,
	0x39, 0xfe, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x44, 0x5b, 0x5a, 0x4c, 0x03, 0x00, 0x00,
}
